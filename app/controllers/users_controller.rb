class UsersController < ApplicationController
  before_action :authenticate_user!

  def show
    @user = User.find(params[:id])
    @skills = @user.skills
    @interests = @user.interests
    @projects = @user.projects
    ideal_project = @user.projects.create(name: "ideal project",
    proposal: "This is an ideal project generated by the user's skills and
    interests and temporarily used for the purpose of finding releated
    projects",
    skill_list: @user.skill_list.join(", "),
    interest_list: @user.interest_list.join(", "))

    ideal_skills = ideal_project.skill_list
    ideal_interests = ideal_project.interest_list
    recommended_projects_by_interests = ideal_project.find_related_interests
    recommended_projects_by_skills = ideal_project.find_related_skills
    @recommended_projects = recommended_projects_by_skills + recommended_projects_by_interests
    @recommended_projects.uniq!

    @recommended_projects.each do |proj|
      if ideal_skills.include?(proj.skill_list) && ideal_interests.include?(proj.interest_list)
        # prioritize projects that have at least one of both. maybe add 5 points
        # push each proj to an array as key value pair with each value being
        # the number of points. then sort the hash by it's values and send back
        # to server as simply an array of sorted project items
      elsif ideal_skills.include?(proj.skill_list)
        #
      else
      end
    end

    binding.pry
    Project.destroy(ideal_project)
  end

  def index
    @users = User.all
  end

  def edit
    @user = current_user
  end

  def update
    @user = User.update(params[:id], user_params)
    if @user.save
      flash[:success] = "Profile updated successfully"
      redirect_to(user_path(@user))
    else
      flash[:notice] = "Update failed"
      render :new
    end
  end

  private

  # def user_params
  #   params.require(:user).permit(:)
  # end
end
